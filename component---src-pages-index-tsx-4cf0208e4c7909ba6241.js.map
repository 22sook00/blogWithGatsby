{"version":3,"file":"component---src-pages-index-tsx-4cf0208e4c7909ba6241.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/camelcase/index.js","webpack://gatsby-starter-default/./node_modules/decode-uri-component/index.js","webpack://gatsby-starter-default/./node_modules/filter-obj/index.js","webpack://gatsby-starter-default/./node_modules/query-string/index.js","webpack://gatsby-starter-default/./node_modules/split-on-first/index.js","webpack://gatsby-starter-default/./node_modules/strict-uri-encode/index.js","webpack://gatsby-starter-default/../src/image-utils.ts","webpack://gatsby-starter-default/../src/components/hooks.ts","webpack://gatsby-starter-default/../src/components/picture.tsx","webpack://gatsby-starter-default/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-default/../src/components/placeholder.tsx","webpack://gatsby-starter-default/../src/components/main-image.tsx","webpack://gatsby-starter-default/../src/components/gatsby-image.browser.tsx","webpack://gatsby-starter-default/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-default/../src/components/static-image.server.tsx","webpack://gatsby-starter-default/../src/components/static-image.tsx","webpack://gatsby-starter-default/./src/components/common/Footer.tsx","webpack://gatsby-starter-default/./src/components/main/Introduction/Introduction.tsx","webpack://gatsby-starter-default/./src/components/main/CategoryList/CategoryList.tsx","webpack://gatsby-starter-default/./src/components/common/Loader/Loading.tsx","webpack://gatsby-starter-default/./src/components/main/PostItem/PostItem.tsx","webpack://gatsby-starter-default/./src/components/main/PostList/PostList.tsx","webpack://gatsby-starter-default/./src/hooks/useInfiniteScroll.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/toConsumableArray.js"],"sourcesContent":["'use strict';\n\nvar preserveCamelCase = function preserveCamelCase(string) {\n  var isLastCharLower = false;\n  var isLastCharUpper = false;\n  var isLastLastCharUpper = false;\n\n  for (var i = 0; i < string.length; i++) {\n    var character = string[i];\n\n    if (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n      string = string.slice(0, i) + '-' + string.slice(i);\n      isLastCharLower = false;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = true;\n      i++;\n    } else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n      string = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = false;\n      isLastCharLower = true;\n    } else {\n      isLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n    }\n  }\n\n  return string;\n};\n\nvar camelCase = function camelCase(input, options) {\n  if (!(typeof input === 'string' || Array.isArray(input))) {\n    throw new TypeError('Expected the input to be `string | string[]`');\n  }\n\n  options = Object.assign({\n    pascalCase: false\n  }, options);\n\n  var postProcess = function postProcess(x) {\n    return options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n  };\n\n  if (Array.isArray(input)) {\n    input = input.map(function (x) {\n      return x.trim();\n    }).filter(function (x) {\n      return x.length;\n    }).join('-');\n  } else {\n    input = input.trim();\n  }\n\n  if (input.length === 0) {\n    return '';\n  }\n\n  if (input.length === 1) {\n    return options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n  }\n\n  var hasUpperCase = input !== input.toLowerCase();\n\n  if (hasUpperCase) {\n    input = preserveCamelCase(input);\n  }\n\n  input = input.replace(/^[_.\\- ]+/, '').toLowerCase().replace(/[_.\\- ]+(\\w|$)/g, function (_, p1) {\n    return p1.toUpperCase();\n  }).replace(/\\d+(\\w|$)/g, function (m) {\n    return m.toUpperCase();\n  });\n  return postProcess(input);\n};\n\nmodule.exports = camelCase; // TODO: Remove this for the next major release\n\nmodule.exports.default = camelCase;","'use strict';\n\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n  try {\n    // Try to decode the entire string first\n    return decodeURIComponent(components.join(''));\n  } catch (err) {// Do nothing\n  }\n\n  if (components.length === 1) {\n    return components;\n  }\n\n  split = split || 1; // Split the array in 2 parts\n\n  var left = components.slice(0, split);\n  var right = components.slice(split);\n  return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input);\n  } catch (err) {\n    var tokens = input.match(singleMatcher);\n\n    for (var i = 1; i < tokens.length; i++) {\n      input = decodeComponents(tokens, i).join('');\n      tokens = input.match(singleMatcher);\n    }\n\n    return input;\n  }\n}\n\nfunction customDecodeURIComponent(input) {\n  // Keep track of all the replacements and prefill the map with the `BOM`\n  var replaceMap = {\n    '%FE%FF': \"\\uFFFD\\uFFFD\",\n    '%FF%FE': \"\\uFFFD\\uFFFD\"\n  };\n  var match = multiMatcher.exec(input);\n\n  while (match) {\n    try {\n      // Decode as big chunks as possible\n      replaceMap[match[0]] = decodeURIComponent(match[0]);\n    } catch (err) {\n      var result = decode(match[0]);\n\n      if (result !== match[0]) {\n        replaceMap[match[0]] = result;\n      }\n    }\n\n    match = multiMatcher.exec(input);\n  } // Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\n\n  replaceMap['%C2'] = \"\\uFFFD\";\n  var entries = Object.keys(replaceMap);\n\n  for (var i = 0; i < entries.length; i++) {\n    // Replace all decoded components\n    var key = entries[i];\n    input = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n  }\n\n  return input;\n}\n\nmodule.exports = function (encodedURI) {\n  if (typeof encodedURI !== 'string') {\n    throw new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n  }\n\n  try {\n    encodedURI = encodedURI.replace(/\\+/g, ' '); // Try the built in decoder first\n\n    return decodeURIComponent(encodedURI);\n  } catch (err) {\n    // Fallback to a more advanced decoder\n    return customDecodeURIComponent(encodedURI);\n  }\n};","'use strict';\n\nmodule.exports = function (obj, predicate) {\n  var ret = {};\n  var keys = Object.keys(obj);\n  var isArr = Array.isArray(predicate);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var val = obj[key];\n\n    if (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n      ret[key] = val;\n    }\n  }\n\n  return ret;\n};","'use strict';\n\nvar _defineProperty = require(\"/Users/22sook00/Desktop/Projects/sookDev/node_modules/@babel/runtime/helpers/defineProperty.js\");\n\nvar _slicedToArray = require(\"/Users/22sook00/Desktop/Projects/sookDev/node_modules/@babel/runtime/helpers/slicedToArray.js\");\n\nvar _toConsumableArray = require(\"/Users/22sook00/Desktop/Projects/sookDev/node_modules/@babel/runtime/helpers/toConsumableArray.js\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar strictUriEncode = require('strict-uri-encode');\n\nvar decodeComponent = require('decode-uri-component');\n\nvar splitOnFirst = require('split-on-first');\n\nvar filterObject = require('filter-obj');\n\nvar isNullOrUndefined = function isNullOrUndefined(value) {\n  return value === null || value === undefined;\n};\n\nvar encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n  switch (options.arrayFormat) {\n    case 'index':\n      return function (key) {\n        return function (result, value) {\n          var index = result.length;\n\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [[encode(key, options), '[', index, ']'].join('')]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')]);\n        };\n      };\n\n    case 'bracket':\n      return function (key) {\n        return function (result, value) {\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [[encode(key, options), '[]'].join('')]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '[]=', encode(value, options)].join('')]);\n        };\n      };\n\n    case 'colon-list-separator':\n      return function (key) {\n        return function (result, value) {\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [[encode(key, options), ':list='].join('')]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), ':list=', encode(value, options)].join('')]);\n        };\n      };\n\n    case 'comma':\n    case 'separator':\n    case 'bracket-separator':\n      {\n        var keyValueSep = options.arrayFormat === 'bracket-separator' ? '[]=' : '=';\n        return function (key) {\n          return function (result, value) {\n            if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n              return result;\n            } // Translate null to an empty string so that it doesn't serialize as 'null'\n\n\n            value = value === null ? '' : value;\n\n            if (result.length === 0) {\n              return [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n            }\n\n            return [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n          };\n        };\n      }\n\n    default:\n      return function (key) {\n        return function (result, value) {\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [encode(key, options)]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '=', encode(value, options)].join('')]);\n        };\n      };\n  }\n}\n\nfunction parserForArrayFormat(options) {\n  var result;\n\n  switch (options.arrayFormat) {\n    case 'index':\n      return function (key, value, accumulator) {\n        result = /\\[(\\d*)\\]$/.exec(key);\n        key = key.replace(/\\[\\d*\\]$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = {};\n        }\n\n        accumulator[key][result[1]] = value;\n      };\n\n    case 'bracket':\n      return function (key, value, accumulator) {\n        result = /(\\[\\])$/.exec(key);\n        key = key.replace(/\\[\\]$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = [value];\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n\n    case 'colon-list-separator':\n      return function (key, value, accumulator) {\n        result = /(:list)$/.exec(key);\n        key = key.replace(/:list$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = [value];\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n\n    case 'comma':\n    case 'separator':\n      return function (key, value, accumulator) {\n        var isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n        var isEncodedArray = typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator);\n        value = isEncodedArray ? decode(value, options) : value;\n        var newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(function (item) {\n          return decode(item, options);\n        }) : value === null ? value : decode(value, options);\n        accumulator[key] = newValue;\n      };\n\n    case 'bracket-separator':\n      return function (key, value, accumulator) {\n        var isArray = /(\\[\\])$/.test(key);\n        key = key.replace(/\\[\\]$/, '');\n\n        if (!isArray) {\n          accumulator[key] = value ? decode(value, options) : value;\n          return;\n        }\n\n        var arrayValue = value === null ? [] : value.split(options.arrayFormatSeparator).map(function (item) {\n          return decode(item, options);\n        });\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = arrayValue;\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], arrayValue);\n      };\n\n    default:\n      return function (key, value, accumulator) {\n        if (accumulator[key] === undefined) {\n          accumulator[key] = value;\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n  }\n}\n\nfunction validateArrayFormatSeparator(value) {\n  if (typeof value !== 'string' || value.length !== 1) {\n    throw new TypeError('arrayFormatSeparator must be single character string');\n  }\n}\n\nfunction encode(value, options) {\n  if (options.encode) {\n    return options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n  }\n\n  return value;\n}\n\nfunction decode(value, options) {\n  if (options.decode) {\n    return decodeComponent(value);\n  }\n\n  return value;\n}\n\nfunction keysSorter(input) {\n  if (Array.isArray(input)) {\n    return input.sort();\n  }\n\n  if (typeof input === 'object') {\n    return keysSorter(Object.keys(input)).sort(function (a, b) {\n      return Number(a) - Number(b);\n    }).map(function (key) {\n      return input[key];\n    });\n  }\n\n  return input;\n}\n\nfunction removeHash(input) {\n  var hashStart = input.indexOf('#');\n\n  if (hashStart !== -1) {\n    input = input.slice(0, hashStart);\n  }\n\n  return input;\n}\n\nfunction getHash(url) {\n  var hash = '';\n  var hashStart = url.indexOf('#');\n\n  if (hashStart !== -1) {\n    hash = url.slice(hashStart);\n  }\n\n  return hash;\n}\n\nfunction extract(input) {\n  input = removeHash(input);\n  var queryStart = input.indexOf('?');\n\n  if (queryStart === -1) {\n    return '';\n  }\n\n  return input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n  if (options.parseNumbers && !Number.isNaN(Number(value)) && typeof value === 'string' && value.trim() !== '') {\n    value = Number(value);\n  } else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n    value = value.toLowerCase() === 'true';\n  }\n\n  return value;\n}\n\nfunction parse(query, options) {\n  options = Object.assign({\n    decode: true,\n    sort: true,\n    arrayFormat: 'none',\n    arrayFormatSeparator: ',',\n    parseNumbers: false,\n    parseBooleans: false\n  }, options);\n  validateArrayFormatSeparator(options.arrayFormatSeparator);\n  var formatter = parserForArrayFormat(options); // Create an object with no prototype\n\n  var ret = Object.create(null);\n\n  if (typeof query !== 'string') {\n    return ret;\n  }\n\n  query = query.trim().replace(/^[?#&]/, '');\n\n  if (!query) {\n    return ret;\n  }\n\n  var _iterator = _createForOfIteratorHelper(query.split('&')),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var param = _step.value;\n\n      if (param === '') {\n        continue;\n      }\n\n      var _splitOnFirst = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '='),\n          _splitOnFirst2 = _slicedToArray(_splitOnFirst, 2),\n          _key = _splitOnFirst2[0],\n          _value = _splitOnFirst2[1]; // Missing `=` should be `null`:\n      // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\n\n      _value = _value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? _value : decode(_value, options);\n      formatter(decode(_key, options), _value, ret);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  for (var _i = 0, _Object$keys = Object.keys(ret); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    var value = ret[key];\n\n    if (typeof value === 'object' && value !== null) {\n      for (var _i2 = 0, _Object$keys2 = Object.keys(value); _i2 < _Object$keys2.length; _i2++) {\n        var k = _Object$keys2[_i2];\n        value[k] = parseValue(value[k], options);\n      }\n    } else {\n      ret[key] = parseValue(value, options);\n    }\n  }\n\n  if (options.sort === false) {\n    return ret;\n  }\n\n  return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce(function (result, key) {\n    var value = ret[key];\n\n    if (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n      // Sort object keys, not values\n      result[key] = keysSorter(value);\n    } else {\n      result[key] = value;\n    }\n\n    return result;\n  }, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = function (object, options) {\n  if (!object) {\n    return '';\n  }\n\n  options = Object.assign({\n    encode: true,\n    strict: true,\n    arrayFormat: 'none',\n    arrayFormatSeparator: ','\n  }, options);\n  validateArrayFormatSeparator(options.arrayFormatSeparator);\n\n  var shouldFilter = function shouldFilter(key) {\n    return options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === '';\n  };\n\n  var formatter = encoderForArrayFormat(options);\n  var objectCopy = {};\n\n  for (var _i3 = 0, _Object$keys3 = Object.keys(object); _i3 < _Object$keys3.length; _i3++) {\n    var key = _Object$keys3[_i3];\n\n    if (!shouldFilter(key)) {\n      objectCopy[key] = object[key];\n    }\n  }\n\n  var keys = Object.keys(objectCopy);\n\n  if (options.sort !== false) {\n    keys.sort(options.sort);\n  }\n\n  return keys.map(function (key) {\n    var value = object[key];\n\n    if (value === undefined) {\n      return '';\n    }\n\n    if (value === null) {\n      return encode(key, options);\n    }\n\n    if (Array.isArray(value)) {\n      if (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n        return encode(key, options) + '[]';\n      }\n\n      return value.reduce(formatter(key), []).join('&');\n    }\n\n    return encode(key, options) + '=' + encode(value, options);\n  }).filter(function (x) {\n    return x.length > 0;\n  }).join('&');\n};\n\nexports.parseUrl = function (url, options) {\n  options = Object.assign({\n    decode: true\n  }, options);\n\n  var _splitOnFirst3 = splitOnFirst(url, '#'),\n      _splitOnFirst4 = _slicedToArray(_splitOnFirst3, 2),\n      url_ = _splitOnFirst4[0],\n      hash = _splitOnFirst4[1];\n\n  return Object.assign({\n    url: url_.split('?')[0] || '',\n    query: parse(extract(url), options)\n  }, options && options.parseFragmentIdentifier && hash ? {\n    fragmentIdentifier: decode(hash, options)\n  } : {});\n};\n\nexports.stringifyUrl = function (object, options) {\n  options = Object.assign(_defineProperty({\n    encode: true,\n    strict: true\n  }, encodeFragmentIdentifier, true), options);\n  var url = removeHash(object.url).split('?')[0] || '';\n  var queryFromUrl = exports.extract(object.url);\n  var parsedQueryFromUrl = exports.parse(queryFromUrl, {\n    sort: false\n  });\n  var query = Object.assign(parsedQueryFromUrl, object.query);\n  var queryString = exports.stringify(query, options);\n\n  if (queryString) {\n    queryString = \"?\".concat(queryString);\n  }\n\n  var hash = getHash(object.url);\n\n  if (object.fragmentIdentifier) {\n    hash = \"#\".concat(options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier);\n  }\n\n  return \"\".concat(url).concat(queryString).concat(hash);\n};\n\nexports.pick = function (input, filter, options) {\n  options = Object.assign(_defineProperty({\n    parseFragmentIdentifier: true\n  }, encodeFragmentIdentifier, false), options);\n\n  var _exports$parseUrl = exports.parseUrl(input, options),\n      url = _exports$parseUrl.url,\n      query = _exports$parseUrl.query,\n      fragmentIdentifier = _exports$parseUrl.fragmentIdentifier;\n\n  return exports.stringifyUrl({\n    url: url,\n    query: filterObject(query, filter),\n    fragmentIdentifier: fragmentIdentifier\n  }, options);\n};\n\nexports.exclude = function (input, filter, options) {\n  var exclusionFilter = Array.isArray(filter) ? function (key) {\n    return !filter.includes(key);\n  } : function (key, value) {\n    return !filter(key, value);\n  };\n  return exports.pick(input, exclusionFilter, options);\n};","'use strict';\n\nmodule.exports = function (string, separator) {\n  if (!(typeof string === 'string' && typeof separator === 'string')) {\n    throw new TypeError('Expected the arguments to be of type `string`');\n  }\n\n  if (separator === '') {\n    return [string];\n  }\n\n  var separatorIndex = string.indexOf(separator);\n\n  if (separatorIndex === -1) {\n    return [string];\n  }\n\n  return [string.slice(0, separatorIndex), string.slice(separatorIndex + separator.length)];\n};","'use strict';\n\nmodule.exports = function (str) {\n  return encodeURIComponent(str).replace(/[!'()*]/g, function (x) {\n    return \"%\".concat(x.charCodeAt(0).toString(16).toUpperCase());\n  });\n};","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        document.addEventListener(`load`, function onLoadListener() {\n          document.removeEventListener(`load`, onLoadListener)\n\n          onStartLoad?.({\n            wasCached: true,\n          })\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import React from \"react\";\n\nconst Footer = () => {\n\treturn (\n\t\t<footer\n\t\t\tclassName=\"mt-16 lg:mt-24 pb-16  \n\t\t flex flex-col items-end gap-2 default-layout\"\n\t\t>\n\t\t\t<a\n\t\t\t\thref=\"https://github.com/22sook00\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\tclassName=\"flex h-fit items-center gap-1\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\tclassName=\"h-5 w-5\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t// stroke-width=\"2\"\n\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\t\td=\"M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1\"\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t\t<span>Github</span>\n\t\t\t</a>\n\n\t\t\t<p className=\"text-sm text-text-light\"> @All rights by sookyoung.lee</p>\n\t\t</footer>\n\t);\n};\n\nexport default Footer;\n","import React, { FC } from \"react\";\n\nimport Typical from \"react-typical\";\nconst Introduction = () => {\n\treturn (\n\t\t<header className=\"flex flex-col lg:flex-row gap-8 justify-center w-full items-center lg:justify-start\">\n\t\t\t<div\n\t\t\t\tclassName={`flex justify-center items-center box-border  rounded-[50%] \n                 border-[4px] border-sky-300 transition hover:opacity-80 hover:animate-spin-slow \n\t\t\t\t\t\t\t\t\thover:border-b-sky-400\n\t\t\t\t\t\t\t\t\tw-[180px] h-[180px] lg:w-[240px] lg:h-[240px]\n                  `}\n\t\t\t>\n\t\t\t\t<div className=\"w-[160px] h-[160px] lg:w-[220px] lg:h-[220px]\">\n\t\t\t\t\t<div className=\"shadow-lg w-[160px] h-[160px] lg:w-[220px] lg:h-[220px] overflow-hidden rounded-[50%] object-cover\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc=\"profile.png\"\n\t\t\t\t\t\t\talt=\"l\"\n\t\t\t\t\t\t\tclassName=\"object-cover object-right-bottom \"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t{/*<h1 className=\"text-3xl lg:text-[44px] mb-4\">Hello,</h1>*/}\n\t\t\t\t<h1 className=\"text-3xl lg:text-[44px] mb-4\">\n\t\t\t\t\t{/*<Typical\n\t\t\t\t\t\tsteps={[\"He\", 1000, \"Hello,\", 500]}\n\t\t\t\t\t\tloop={Infinity}\n\t\t\t\t\t\twrapper=\"h1\"\n\t\t\t\t\t/>*/}\n\t\t\t\t\tHello,\n\t\t\t\t</h1>\n\t\t\t\t<h2>Welcome to Sookyoung's devlog 🙌🏻</h2>\n\n\t\t\t\t<div className=\"text-sm lg:text-base text-justify\">\n\t\t\t\t\t<h3>\n\t\t\t\t\t\tI'm Junior <b>Frontend</b> Developer, Sookyoung Lee.\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t{/* about me 에 넣기*/}\n\t\t\t\t\t\t{/*Currently, I am working for a company that operates a\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\ttarget={\"_blank\"}\n\t\t\t\t\t\t\thref=\"https://stay.enkor.kr/\"\n\t\t\t\t\t\t\tclassName=\"underline  underline-offset-2 cursor-pointer transition text-text-dark hover:text-text-light\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\twebsite builder system\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\tand\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\ttarget={\"_blank\"}\n\t\t\t\t\t\t\thref=\"https://stay.enkor.kr/\"\n\t\t\t\t\t\t\tclassName=\"underline  underline-offset-2 cursor-pointer transition text-text-dark hover:text-text-light\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tanti-corruption program\n\t\t\t\t\t\t</a>*/}\n\t\t\t\t\t\tThe main stack is\n\t\t\t\t\t\t<span className=\"text-text-primary border-text-tag-blue tag-layout capitalize bg-white\">\n\t\t\t\t\t\t\treact\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"text-text-primary border-text-tag-blue tag-layout capitalize bg-white\">\n\t\t\t\t\t\t\tNext.js\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"text-text-primary border-text-tag-blue tag-layout capitalize bg-white\">\n\t\t\t\t\t\t\tTypeScript\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br className=\"hidden lg:block\" />I keep studying for better web\n\t\t\t\t\t\tusability and data optimization. <br className=\"hidden lg:block\" />I\n\t\t\t\t\t\tam interested in app development and am currently studying\n\t\t\t\t\t\t<span className=\"text-text-primary border-text-primary tag-layout bg-white\">\n\t\t\t\t\t\t\tReact Native\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<span>Want to know more about me? 👉🏻 </span>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"/about\"\n\t\t\t\t\t\t\t\tclassName=\"underline underline-offset-2 cursor-pointer transition text-text-dark hover:text-text-light dark:text-slate-200\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tAbout Me\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</h3>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n};\n\nexport default Introduction;\n","import { Link } from \"gatsby\";\nimport React, { FC, ReactNode, useCallback, useEffect, useState } from \"react\";\n\ntype CategoryItemProps = {\n\tactive: boolean;\n};\n\ntype GatsbyLinkProps = {\n\tchildren: ReactNode;\n\tclassName?: string;\n\tto: string;\n} & CategoryItemProps;\n\nexport interface ICategoryListProps {\n\tselectedCategory: string;\n\tcategoryList: {\n\t\t[key: string]: number;\n\t};\n}\n\nconst CategoryList: FC<ICategoryListProps> = ({\n\tselectedCategory,\n\tcategoryList,\n}) => {\n\tconst [isShowShadow, setIsShowShadow] = useState<boolean>(false);\n\tconst handleCheckScroll = useCallback(() => {\n\t\tconst scrollY = window.scrollY;\n\t\tscrollY < 420 ? setIsShowShadow(false) : setIsShowShadow(true);\n\t}, []);\n\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"scroll\", handleCheckScroll);\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"scroll\", handleCheckScroll);\n\t\t};\n\t}, [handleCheckScroll]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`lg:sticky top-[63px] lg:top-[79px] z-40 bg-white col-span-1 py-4 pb-8 lg:p-6 lg:mt-4 mb-4 lg:border lg:rounded-lg h-fit ${\n\t\t\t\tisShowShadow && \"border-b\"\n\t\t\t} dark:bg-slate-800 dark:text-slate-200`}\n\t\t>\n\t\t\t<h2 className=\"hidden lg:block font-bold text-xl mb-6\">Category</h2>\n\t\t\t<div className=\"flex gap-3 flex-wrap h-fit lg:mt-4\">\n\t\t\t\t{Object.entries(categoryList).map(([name, count]) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto={`/?category=${name}`}\n\t\t\t\t\t\t\tkey={name}\n\t\t\t\t\t\t\tclassName={`${\n\t\t\t\t\t\t\t\tname.toLowerCase() === selectedCategory.toLowerCase()\n\t\t\t\t\t\t\t\t\t? \"  transition text-sky-600 border-transparent bg-blue-100 ring-sky-400 ring-opacity-60  ring-offset-2 focus:outline-none focus:ring-2\"\n\t\t\t\t\t\t\t\t\t: \"text-gray-400\"\n\t\t\t\t\t\t\t} capitalize  px-2 py-1 rounded-2xl border text-xs lg:text-sm w-fit text-center h-[30px] `}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{name} ({count})\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default CategoryList;\n","import React, { FC } from \"react\";\n\ninterface Props {\n\tspinItemColor?: string;\n\twidth?: string;\n\theight?: string;\n}\n\nconst Loading: FC<Props> = ({ spinItemColor, width, height }) => {\n\treturn (\n\t\t<span\n\t\t\tclassName={`box-border border-[4px] border-sky-300 opacity-70 rounded-[50%] ${\n\t\t\t\tspinItemColor ? `border-b-[${spinItemColor}]` : `border-b-sky-500`\n\t\t\t}   ${width ? width : \"w-4 lg:w-6\"}\n       \n\t\t\t\t\t\t\n\t\t\t${height ? height : \"h-4 lg:h-6 \"}\n        \t\t\t\t     inline-block animate-spin \n            `}\n\t\t></span>\n\t);\n};\n\nexport default Loading;\n","import { GatsbyImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport \"@src/components/main/PostItem/postItem.css\";\nimport { Link } from \"gatsby\";\n\nconst PostItem = (node) => {\n\treturn (\n\t\t<Link to={node.fields?.slug} key={node.idx}>\n\t\t\t<div\n\t\t\t\tclassName=\"bg-white hover:bg-slate-400/10 dark:highlight-white/5 cursor-pointer\n\t\t\tlg:flex gap-4 border rounded-lg shadow-sm lg:p-6 my-4 transition\n\t\t\thover:backdrop-opacity-10  dark:bg-slate-800 dark:text-slate-200\"\n\t\t\t>\n\t\t\t\t<GatsbyImage\n\t\t\t\t\timage={node.frontmatter?.thumbnail?.childImageSharp?.gatsbyImageData}\n\t\t\t\t\talt=\"Gatsby Image\"\n\t\t\t\t\tclassName=\"lg:hidden w-full h-[120px] object-cover rounded-tr-md rounded-tl-md lg:rounded-md\"\n\t\t\t\t/>\n\t\t\t\t<p className=\"hidden lg:block lg:text-xl \">\n\t\t\t\t\t{String(node.idx).length === 1 ? `0${node.idx + 1}` : node.idx + 1}\n\t\t\t\t</p>\n\n\t\t\t\t<div className=\"p-2 lg:p-0 w-full lg:flex lg:justify-between\">\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<div className=\"h-fit flex lg:justify-between items-start gap-2 lg:gap-4  lg:items-center\">\n\t\t\t\t\t\t\t<p className=\"lg:hidden lg:text-xl \">\n\t\t\t\t\t\t\t\t{String(node.idx).length === 1\n\t\t\t\t\t\t\t\t\t? `0${node.idx + 1}`\n\t\t\t\t\t\t\t\t\t: node.idx + 1}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<h1 className=\" lg:text-xl text-ellipsis truncate  \">\n\t\t\t\t\t\t\t\t{node.frontmatter?.title}\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<ul className=\"flex gap-2 my-2 mb-4 lg:mb-2\">\n\t\t\t\t\t\t\t{node.frontmatter?.categories?.map(\n\t\t\t\t\t\t\t\t(category: any, idx: number) => (\n\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\t\tclassName={`border ${\n\t\t\t\t\t\t\t\t\t\t\tcategory === \"daily\"\n\t\t\t\t\t\t\t\t\t\t\t\t? \"border-yellow-400\"\n\t\t\t\t\t\t\t\t\t\t\t\t: category === \"react\" ||\n\t\t\t\t\t\t\t\t\t\t\t\t  category === \"typescript\" ||\n\t\t\t\t\t\t\t\t\t\t\t\t  category === \"javascript\" ||\n\t\t\t\t\t\t\t\t\t\t\t\t  category === \"next.js\"\n\t\t\t\t\t\t\t\t\t\t\t\t? \"border-sky-400\"\n\t\t\t\t\t\t\t\t\t\t\t\t: category === \"web\" || category === \"app\"\n\t\t\t\t\t\t\t\t\t\t\t\t? \"border-green-600\"\n\t\t\t\t\t\t\t\t\t\t\t\t: category === \"algorithm\"\n\t\t\t\t\t\t\t\t\t\t\t\t? \"border-slate-600\"\n\t\t\t\t\t\t\t\t\t\t\t\t: category === \"git\"\n\t\t\t\t\t\t\t\t\t\t\t\t? \"border-purple-400\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"border-pink-400\"\n\t\t\t\t\t\t\t\t\t\t}   w-fit  px-2 py-1 rounded-lg text-[10px]`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{category}\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ul>{\" \"}\n\t\t\t\t\t\t<div className=\"mt-2\">\n\t\t\t\t\t\t\t<p className=\"text-sm my-2 text-text-light\">\n\t\t\t\t\t\t\t\t{node.frontmatter.summary}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\tclassName=\"summaryText\"\n\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{ __html: node.html }}\n\t\t\t\t\t\t\t\t//dangerouslySetInnerHTML 블로그 정리하기!\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t\t<p className=\"text-text-light text-sm lg:my-2\">\n\t\t\t\t\t\t{node.frontmatter?.date}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<GatsbyImage\n\t\t\t\t\timage={node.frontmatter?.thumbnail?.childImageSharp?.gatsbyImageData}\n\t\t\t\t\talt=\"Gatsby Image\"\n\t\t\t\t\tclassName=\"hidden lg:block w-[20%] h-[160px]  rounded-md\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Link>\n\t);\n};\n\nexport default PostItem;\n","import React, { FC } from \"react\";\nimport Loading from \"@src/components/common/Loader/Loading\";\nimport PostItem from \"../PostItem/PostItem\";\n\ninterface PostListProps {\n\tpostList: any;\n\tfilteryBycategory: any;\n\tcontainerRef?: any;\n}\nconst PostList: FC<PostListProps> = ({\n\tfilteryBycategory,\n\tpostList,\n\tcontainerRef,\n}) => {\n\treturn (\n\t\t<div ref={containerRef} className=\"lg:relative lg:col-span-3  \">\n\t\t\t{postList.map(({ node }: any, idx: number) => (\n\t\t\t\t<PostItem {...node} link={node.fields.slug} key={node.id} idx={idx} />\n\t\t\t))}\n\t\t\t<div\n\t\t\t\tclassName={`${\n\t\t\t\t\tfilteryBycategory[1] === postList.length\n\t\t\t\t\t\t? \"hidden\"\n\t\t\t\t\t\t: \" inset-x-0 bottom-0 flex justify-center absolute  bg-gradient-to-t from-white pt-32 pb-8 pointer-events-none dark:bg-gradient-to-t dark:from-slate-800 \"\n\t\t\t\t}`}\n\t\t\t>\n\t\t\t\t<Loading />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default PostList;\n","import { MutableRefObject, useState, useEffect, useRef, useMemo } from \"react\";\n\nexport type useInfiniteScrollType = {\n\tcontainerRef: MutableRefObject<HTMLDivElement | null>;\n\tpostList: any[];\n};\n\nconst NUMBER_OF_ITEMS_PER_PAGE = 5;\n\nconst useInfiniteScroll = function (\n\tselectedCategory: string,\n\tposts: any[],\n): useInfiniteScrollType {\n\tconst containerRef: MutableRefObject<HTMLDivElement | null> =\n\t\tuseRef<HTMLDivElement>(null);\n\t//몇개씩 끊어서 보여줄건지 지정하기 : 선택된 tag 에 따라 숫자를 나눠줘야 하기 떄문에 다음과같은 식 작성.\n\tconst [count, setCount] = useState<number>(1);\n\tconst observer: MutableRefObject<IntersectionObserver | null> =\n\t\tuseRef<IntersectionObserver>(null);\n\n\tconst postListByCategory = useMemo<any[]>(\n\t\t() =>\n\t\t\tposts.filter(\n\t\t\t\t({\n\t\t\t\t\tnode: {\n\t\t\t\t\t\tfrontmatter: { categories },\n\t\t\t\t\t},\n\t\t\t\t}: any) =>\n\t\t\t\t\tselectedCategory !== \"All\"\n\t\t\t\t\t\t? categories.includes(selectedCategory)\n\t\t\t\t\t\t: true,\n\t\t\t),\n\t\t[selectedCategory],\n\t);\n\n\tuseEffect(() => {\n\t\tobserver.current = new IntersectionObserver((entries, observer) => {\n\t\t\tif (!entries[0].isIntersecting) return;\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetCount((value) => value + 1);\n\t\t\t}, 1500);\n\t\t\tobserver.unobserve(entries[0].target);\n\t\t});\n\t}, []);\n\n\tuseEffect(() => setCount(1), [selectedCategory]);\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\tNUMBER_OF_ITEMS_PER_PAGE * count >= postListByCategory.length ||\n\t\t\tcontainerRef.current === null ||\n\t\t\tcontainerRef.current.children.length === 0 ||\n\t\t\tobserver.current === null\n\t\t)\n\t\t\treturn;\n\n\t\tobserver.current.observe(\n\t\t\tcontainerRef.current.children[containerRef.current.children.length - 1],\n\t\t);\n\t}, [count, selectedCategory]);\n\n\treturn {\n\t\tcontainerRef,\n\t\tpostList: postListByCategory.slice(0, count * NUMBER_OF_ITEMS_PER_PAGE),\n\t};\n};\n\nexport default useInfiniteScroll;\n","import React, { FC, useEffect, useMemo } from \"react\";\n\nimport { graphql } from \"gatsby\";\nimport ProfileImage from \"@src/components/main/ProfileImage/ProfileImage\";\nimport LayoutDefault from \"@src/components/common/Layout/LayoutDefault\";\nimport Introduction from \"@src/components/main/Introduction/Introduction\";\nimport CategoryList from \"@src/components/main/CategoryList/CategoryList\";\nimport Footer from \"@src/components/common/Footer\";\nimport queryString, { ParsedQuery } from \"query-string\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport PostList from \"@src/components/main/PostList/PostList\";\nimport useInfiniteScroll from \"@src/hooks/useInfiniteScroll\";\nimport { TemplateProps } from \"@src/interface/IgetDatas\";\nimport { useDispatch } from \"react-redux\";\n\nimport { setAllPostList } from \"@src/redux/slice/postSlice\";\n\nconst IndexPage: FC<TemplateProps> = ({\n\tlocation: { search },\n\tdata: {\n\t\tallMarkdownRemark: { edges },\n\t\tsite: {\n\t\t\tsiteMetadata: { title, description, siteUrl },\n\t\t},\n\t},\n}) => {\n\tconst dispatch = useDispatch();\n\tconst parsed: ParsedQuery<string> = queryString.parse(search);\n\t//!카테고리\n\tconst selectedCategory: string =\n\t\ttypeof parsed.category !== \"string\" || !parsed.category\n\t\t\t? \"All\"\n\t\t\t: parsed.category;\n\tconst { containerRef, postList } = useInfiniteScroll(selectedCategory, edges);\n\tconst categoryList = useMemo(\n\t\t() =>\n\t\t\tedges.reduce(\n\t\t\t\t(\n\t\t\t\t\tlist: any,\n\t\t\t\t\t{\n\t\t\t\t\t\tnode: {\n\t\t\t\t\t\t\tfrontmatter: { categories },\n\t\t\t\t\t\t},\n\t\t\t\t\t}: any,\n\t\t\t\t) => {\n\t\t\t\t\tcategories.forEach((category: string) => {\n\t\t\t\t\t\tif (list[category] === undefined) list[category] = 1;\n\t\t\t\t\t\telse list[category]++;\n\t\t\t\t\t});\n\n\t\t\t\t\tlist[\"All\"]++;\n\t\t\t\t\treturn list;\n\t\t\t\t},\n\t\t\t\t{ All: 0 },\n\t\t\t),\n\t\t[],\n\t);\n\n\tconst filteryBycategory = Object.entries(categoryList).filter(\n\t\t(el) => el[0] === selectedCategory,\n\t);\n\tconst searchArr = edges.map((search) => {\n\t\treturn {\n\t\t\tlink: search.node.fields.slug,\n\t\t\tpost: search.node.frontmatter,\n\t\t};\n\t});\n\tuseEffect(() => {\n\t\tdispatch(setAllPostList(searchArr));\n\t}, []);\n\tconsole.log(\"rrr\", title, description);\n\treturn (\n\t\t<main className=\"dark:bg-slate-800\">\n\t\t\t<LayoutDefault title={title} description={description} url={siteUrl}>\n\t\t\t\t<Introduction />\n\t\t\t\t<section className=\"lg:grid grid-cols-4 gap-4 mt-4 lg:mt-16 \">\n\t\t\t\t\t<CategoryList\n\t\t\t\t\t\tselectedCategory={selectedCategory}\n\t\t\t\t\t\tcategoryList={categoryList}\n\t\t\t\t\t/>\n\t\t\t\t\t<PostList\n\t\t\t\t\t\tpostList={postList}\n\t\t\t\t\t\tfilteryBycategory={filteryBycategory[0]}\n\t\t\t\t\t\tcontainerRef={containerRef}\n\t\t\t\t\t/>\n\t\t\t\t</section>\n\t\t\t\t<Footer />\n\t\t\t</LayoutDefault>\n\t\t</main>\n\t);\n};\n\nexport default IndexPage;\n\nexport const getPostList = graphql`\n\tquery getPostList {\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\ttitle\n\t\t\t\tdescription\n\t\t\t\tsiteUrl\n\t\t\t}\n\t\t}\n\t\tallMarkdownRemark(\n\t\t\tsort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tfields {\n\t\t\t\t\t\tslug\n\t\t\t\t\t}\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tsummary\n\t\t\t\t\t\tdate(formatString: \"YYYY.MM.DD.\")\n\t\t\t\t\t\tcategories\n\t\t\t\t\t\tthumbnail {\n\t\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\t\tgatsbyImageData(width: 768, height: 400)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfile(name: { eq: \"profile-image\" }) {\n\t\t\tchildImageSharp {\n\t\t\t\tgatsbyImageData(width: 120, height: 120)\n\t\t\t}\n\t\t\tpublicURL\n\t\t}\n\t}\n`;\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","x","map","trim","filter","length","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","module","exports","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","err","left","right","prototype","concat","call","decode","tokens","match","encodedURI","replaceMap","exec","result","entries","keys","key","customDecodeURIComponent","obj","predicate","ret","isArr","val","indexOf","_defineProperty","_slicedToArray","_toConsumableArray","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","minLen","_arrayLikeToArray","n","toString","constructor","name","from","_unsupportedIterableToArray","F","s","done","value","e","_e","f","normalCompletion","didErr","step","next","_e2","return","arr","len","arr2","strictUriEncode","decodeComponent","splitOnFirst","filterObject","encodeFragmentIdentifier","validateArrayFormatSeparator","encode","strict","encodeURIComponent","keysSorter","sort","a","b","Number","removeHash","hashStart","extract","queryStart","parseValue","parseNumbers","isNaN","parseBooleans","parse","query","arrayFormat","arrayFormatSeparator","formatter","accumulator","undefined","includes","isEncodedArray","newValue","item","arrayValue","parserForArrayFormat","create","_step","_iterator","param","_splitOnFirst","_splitOnFirst2","_key","_value","_i","_Object$keys","_i2","_Object$keys2","k","reduce","Boolean","stringify","object","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","_i3","_Object$keys3","parseUrl","url","_splitOnFirst3","_splitOnFirst4","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","queryString","getHash","pick","_exports$parseUrl","exclude","exclusionFilter","separator","separatorIndex","str","charCodeAt","height","format","isLoading","isLoaded","images","loading","style","shouldLoad","opacity","placeholder","layout","width","backgroundColor","objectFit","objectPosition","wrapperStyle","position","top","bottom","transition","sources","fallbackImage","paddingTop","maxWidth","display","React","alt","role","src","children","props","Fragment","Sizer","q","H","P","srcSet","decoding","fallback","t","sizes","Image","media","type","propTypes","PropTypes","Picture","displayName","isRequired","Placeholder","_Picture$propTypes","propName","componentName","MainImage","rest","image","altValidator","Set","onError","as","className","preactClass","class","onStartLoad","onLoad","overflow","getWrapperProps","wStyle","wClass","wrapperProps","useRef","useMemo","JSON","sizer","getSizer","useEffect","renderImageToStringPromise","import","then","renderImageToString","swapPlaceholderImage","renderImage","root","current","querySelector","ssrImage","hasNativeLazyLoadSupport","complete","wasCached","setTimeout","removeAttribute","document","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","innerHTML","animationFrame","requestAnimationFrame","cleanupCallback","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ae","memo","warn","GatsbyImageHydrator","GatsbyImage","se","checkDimensionProps","validLayouts","Error","GatsbyImageBrowser","__error","imageData","__imageData","console","StaticImage","href","target","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","selectedCategory","categoryList","useState","isShowShadow","setIsShowShadow","handleCheckScroll","useCallback","scrollY","window","count","Link","to","spinItemColor","node","fields","_node$fields","slug","idx","frontmatter","_node$frontmatter","thumbnail","_node$frontmatter$thu","childImageSharp","_node$frontmatter$thu2","gatsbyImageData","String","_node$frontmatter2","title","_node$frontmatter3","categories","_node$frontmatter3$ca","category","summary","html","_node$frontmatter4","date","_node$frontmatter5","_node$frontmatter5$th","_node$frontmatter5$th2","filteryBycategory","postList","containerRef","PostItem","link","id","Loading","posts","setCount","observer","postListByCategory","IntersectionObserver","isIntersecting","unobserve","observe","search","location","data","edges","allMarkdownRemark","site","siteMetadata","description","siteUrl","dispatch","useDispatch","parsed","useInfiniteScroll","list","forEach","All","el","searchArr","post","setAllPostList","log","LayoutDefault","Introduction","CategoryList","PostList","Footer","arrayLikeToArray","__esModule","defineProperty","enumerable","configurable","writable","iter","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread"],"sourceRoot":""}